{"version":3,"sources":["components/Popups/swal-auth.js"],"names":["__webpack_require__","r","__webpack_exports__","d","SwalToast","SwalInvalidCredentials","sweetalert2_dist_sweetalert2_js__WEBPACK_IMPORTED_MODULE_0__","sweetalert2_dist_sweetalert2_js__WEBPACK_IMPORTED_MODULE_0___default","n","_utilities_helpers__WEBPACK_IMPORTED_MODULE_1__","Swal","mixin","toast","position","showConfirmButton","timer","props","fire","title","html","type","buttonsStyling","showCloseButton","showCancelButton","cancelButtonClass","cancelButtonText","then","result","dismiss","DismissReason","cancel","SwalAuth","footer","customClass","confirmButtonClass","confirmButtonText","showLoaderOnConfirm","backdrop","width","preConfirm","fields","document","forms","getElementsByClassName","username","value","password","validateFields","showValidationMessage","afterValidationSuccess","addEventListener","e","concat","detail","user_display_name","allowOutsideClick","isLoading","allowEscapeKey"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,2CAAAG,IAAA,IAAAC,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,IAGMI,EAAYM,IAAKC,MAAM,CAC5BC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,MAOFV,EAAyB,SAACW,GAC/B,OAAON,IAAKO,KAAK,CAChBC,MAAK,wBACLC,KAAI,6BACJC,KAAM,QACNC,gBAAgB,EAChBP,mBAAmB,EACnBQ,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAmB,kBACnBC,iBAAkB,cAChBC,KAAK,SAAAC,GAEHA,EAAOC,UAAYlB,IAAKmB,cAAcC,QAAQC,EAASf,MAIvDe,EAAW,SAACf,GACjB,OAAON,IAAKO,KAAK,CAChBC,MAAK,QACLC,KAAI,q6CA0BJa,OAAM,uEACNC,YAAa,YACbZ,gBAAgB,EAChBa,mBAAoB,kBACpBC,kBAAmB,QACnBC,qBAAqB,EACrBC,SAAQ,kBACRf,iBAAiB,EACjBgB,MAAO,QACPC,WAAY,WACX,IAAIC,EAASC,SAASC,MAAM,cAAcC,uBAAuB,YAC7DC,EAAWJ,EAAM,SAAaK,MAC9BC,EAAWN,EAAM,SAAaK,MAElC,IAA+B,IAA3BE,YAAeP,GAAmB,OAAO9B,IAAKsC,sBAAL,2BAE7ChC,EAAMiC,uBAAuB,CAAEL,WAAUE,aAGzCL,SAASS,iBAAiB,yBAA0B,SAACC,GAAD,OAAO/C,EAAUa,KACpE,CAAEG,KAAM,UAAWF,MAAK,gBAAAkC,OAAkBD,EAAEE,OAAOC,kBAA3B,SAIzBb,SAASS,iBAAiB,uBAAwB,kBAAM7C,EAAuBW,MAEhFuC,kBAAmB,kBAAO7C,IAAK8C,eAC7B9B,KAAK,SAAAC,GACHA,EAAOC,SACXlB,IAAKO,KAAK,CACTC,MAAK,mCACLE,KAAM,WACNN,mBAAmB,EACnB2C,gBAAgB,EAChBF,mBAAmB,OAKPxB","file":"static/js/swal-auth.2d0d78aa.chunk.js","sourcesContent":["import Swal from \"sweetalert2/dist/sweetalert2.js\";\r\nimport { validateFields } from \"../../utilities/helpers\";\r\n\r\nconst SwalToast = Swal.mixin({\r\n\ttoast: true,\r\n\tposition: \"top-end\",\r\n\tshowConfirmButton: false,\r\n\ttimer: 3000\r\n});\r\n\r\n/**\r\n * Render Invalid Credentials Modal\r\n * @param { object } props - Contains the functions passed from the login component\r\n */\r\nconst SwalInvalidCredentials = (props) => {\r\n\treturn Swal.fire({\r\n\t\ttitle: `Something went wrong.`,\r\n\t\thtml: `Invalid login credentials.`,\r\n\t\ttype: \"error\",\r\n\t\tbuttonsStyling: false,\r\n\t\tshowConfirmButton: false,\r\n\t\tshowCloseButton: true,\r\n\t\tshowCancelButton: true,\r\n\t\tcancelButtonClass: 'btn btn-primary',\r\n\t\tcancelButtonText: \"Try Again\" \r\n\t}).then(result => {\r\n\t\t// Passing Props Back to Login if Try Again is Clicked\r\n\t\tif (result.dismiss === Swal.DismissReason.cancel) SwalAuth(props);\r\n\t});\r\n}\r\n\r\nconst SwalAuth = (props) => {\r\n\treturn Swal.fire({\r\n\t\ttitle: `Login`,\r\n\t\thtml: `<form name=\"swal-login\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group mb-3\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">User</span>\r\n                        </div>\r\n                        <input class=\"form-control required\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" name=\"username\" type=\"text\" placeholder=\"Your Username\" required/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group mb-3\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon2\">Pass</span>\r\n                        </div> \r\n                        <input class=\"form-control required\" aria-label=\"Password\" aria-describedby=\"basic-addon2\" name=\"password\" type=\"password\" placeholder=\"Your Password\" required/>      \r\n                    </div>\r\n                </div> \r\n                <div class=\"col-12\">\r\n                    <div class=\"row\"> \r\n                        <div class=\"col-12 text-right\">\r\n                            <p><a href=\"javascript:void(0)\" class=\"swal-login__forgot-pwd\">Forgot Password?</a></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div></form>`,\r\n\t\tfooter: `View your privacy policy &nbsp;<a href=\"/p/privacy-policy\">here</a>.`,\r\n\t\tcustomClass: \"swal-auth\",\r\n\t\tbuttonsStyling: false,\r\n\t\tconfirmButtonClass: 'btn btn-primary',\r\n\t\tconfirmButtonText: \"Login\",\r\n\t\tshowLoaderOnConfirm: true,\r\n\t\tbackdrop: `rgba(0,0,0,0.2)`,\r\n\t\tshowCloseButton: true,\r\n\t\twidth: \"35rem\",\r\n\t\tpreConfirm: () => {\r\n\t\t\tvar fields = document.forms[\"swal-login\"].getElementsByClassName(\"required\");\r\n\t\t\tvar username = fields[\"username\"].value;\r\n\t\t\tvar password = fields[\"password\"].value;\r\n\r\n\t\t\tif (validateFields(fields) === false) return Swal.showValidationMessage(`Please fill all fields.`);\r\n\r\n\t\t\tprops.afterValidationSuccess({ username, password });\r\n\r\n\t\t\t// On Success\r\n\t\t\tdocument.addEventListener('user/get_token_success', (e) => SwalToast.fire(\r\n\t\t\t\t{ type: \"success\", title: `Welcome back ${e.detail.user_display_name}.` }\r\n\t\t\t));\r\n\r\n\t\t\t// On Error\r\n\t\t\tdocument.addEventListener('user/get_token_error', () => SwalInvalidCredentials(props));\r\n\t\t},\r\n\t\tallowOutsideClick: () => !Swal.isLoading()\r\n\t}).then(result => {\r\n\t\tif (result.dismiss) return;\r\n\t\tSwal.fire({\r\n\t\t\ttitle: `Checking details, please wait...`,\r\n\t\t\ttype: \"question\",\r\n\t\t\tshowConfirmButton: false,\r\n\t\t\tallowEscapeKey: false,\r\n\t\t\tallowOutsideClick: false\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default SwalAuth;\r\nexport { SwalToast, SwalInvalidCredentials };"],"sourceRoot":""}