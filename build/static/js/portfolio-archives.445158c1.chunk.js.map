{"version":3,"sources":["pages/PortfolioArchive.js"],"names":["Projects","window","scrollTo","className","this","props","projects","meta","title","description","canonical","location","pathname","Fragment","name","content","link","rel","href","id","pageTitle","posts","isSingle","options","loading","elements","classes","outer","Component","frontload","a","updateProjects","requestApi","get","then","req","data","connect","store","dispatch","bindActionCreators","getProjects","frontloadConnect","onMount","onUpdate"],"mappings":"4SAaMA,G,mMAGJC,OAAOC,SAAS,EAAG,K,yCAInB,OACC,yBAAKC,UAAU,gBACd,yBAAKA,UAAU,wBACd,4BAAQA,UAAU,iDACjB,uBAAGA,UAAU,6BAEd,4BAAQA,UAAU,iDACjB,uBAAGA,UAAU,kC,+BAOR,IAAD,EACqCC,KAAKC,MAA1CC,EADA,EACAA,SACFC,EAAO,CACZC,MAAO,oBACPC,YAAa,sFACbC,UAAW,2BALJ,EACUC,SAAYC,UAY9B,OACC,kBAAC,IAAMC,SAAP,KACC,kBAAC,IAAD,CACCL,MAAOD,EAAKC,MACZD,KAAM,CACLA,EAAKE,YAAc,CAAEK,KAAM,cAAeC,QAASR,EAAKE,aAAgB,IAEzEO,KAAM,CACLT,EAAKG,UAAY,CAAEO,IAAK,YAAaC,KAAMX,EAAKG,WAAc,MAGhE,yBAAKS,GAAG,UAAUhB,UAAU,8CAC3B,kBAAC,IAAD,CAAWiB,UAAU,cACrB,yBAAKjB,UAAU,aACd,kBAAC,IAAD,CAAMkB,MAAOf,EAAUH,UAAU,eAAemB,UAAU,EAAOC,QAAS,CAAEC,QAnBhE,CACfC,SAAU,EACVC,QAAS,CAAEC,MAAO,gC,GA/BEC,cAkEjBC,EAAS,sCAAG,WAAMxB,GAAN,iBAAAyB,EAAA,4DACTC,EAAmB1B,EAAnB0B,eADS,SAEEC,IAAWC,IAAX,gCAA+CC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAFjE,cAEXA,EAFW,yBAGVL,EAAeK,IAHL,yCAAH,sDAOAC,sBAhBS,SAAAC,GAEvB,MAAO,CAAEhC,SADYgC,EAAbhC,WAKkB,SAAAiC,GAAQ,OAAIC,YAAmB,CAAEC,gBAAaV,oBAAkBQ,IAU5EF,CACdK,2BAAiBb,EAAW,CAAEc,SAAS,EAAMC,UAAU,GAAvDF,CAAgE1C","file":"static/js/portfolio-archives.445158c1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { frontloadConnect } from \"react-frontload\";\r\n\r\nimport { Main, PageIntro } from \"../components/General\";\r\nimport { getProjects, updateProjects } from \"../redux/actions/projects\";\r\nimport { requestApi } from \"../redux/actions/api\";\r\n\r\n// SCSS \r\nimport \"./../static/scss/pages/_portfolio-archive.scss\";\r\n\r\nclass Projects extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\trenderNavigation() {\r\n\t\treturn (\r\n\t\t\t<div className=\"projects-nav\">\r\n\t\t\t\t<div className=\"projects-nav__arrows\">\r\n\t\t\t\t\t<button className=\"projects-nav__arrow projects-nav__arrow--prev\">\r\n\t\t\t\t\t\t<i className=\"fas fa-arrow-left fa-2x\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"projects-nav__arrow projects-nav__arrow--next\">\r\n\t\t\t\t\t\t<i className=\"fas fa-arrow-right fa-2x\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div >\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { projects, location: { pathname } } = this.props;\r\n\t\tconst meta = {\r\n\t\t\ttitle: 'View My Portfolio',\r\n\t\t\tdescription: 'View my best work and see what resources I`ve used to create this amazing websites.',\r\n\t\t\tcanonical: \"https://www.iambican.com\" + pathname\r\n\t\t};\r\n\r\n\t\tconst loading = {\r\n\t\t\telements: 6,\r\n\t\t\tclasses: { outer: 'col-md-6 col-lg-4' }\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helmet\r\n\t\t\t\t\ttitle={meta.title}\r\n\t\t\t\t\tmeta={[\r\n\t\t\t\t\t\tmeta.description ? { name: 'description', content: meta.description } : {}\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tlink={[\r\n\t\t\t\t\t\tmeta.canonical ? { rel: 'canonical', href: meta.canonical } : {}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"content\" className=\"content content--projects content--archive\">\r\n\t\t\t\t\t<PageIntro pageTitle='Portfolio' />\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Main posts={projects} className=\"my-3 my-md-5\" isSingle={false} options={{ loading: loading }} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Binds menu items to navigation container\r\nconst mapStateToProps = store => {\r\n\tconst { projects } = store;\r\n\treturn { projects };\r\n};\r\n\r\n// Dispatch to props.getProjects\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getProjects, updateProjects }, dispatch);\r\n\r\n// Server Side Stuff\r\nconst frontload = async props => {\r\n\tconst { updateProjects } = props;\r\n\tconst data = await requestApi.get(`wp/v2/portfolios?per_page=10`).then(req => req.data);\r\n\treturn updateProjects(data);\r\n}\r\n\r\n// Export container while connected to store and SSR\r\nexport default connect(mapStateToProps, mapDispatchToProps)(\r\n\tfrontloadConnect(frontload, { onMount: true, onUpdate: false })(Projects)\r\n);\r\n"],"sourceRoot":""}