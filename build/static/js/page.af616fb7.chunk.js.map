{"version":3,"file":"static/js/page.af616fb7.chunk.js","mappings":"8IAWA,IARkB,QAAC,MAAEA,EAAQ,yBAAX,SACjB,oBAASC,UAAU,+CAAnB,UACC,SAAC,IAAD,WACC,eAAIA,UAAU,uBAAd,SAAsCD,U,6JCQzC,MAyCME,GAAcC,EAAAA,EAAAA,KALFC,MAAAA,IAAyD,IAAhDC,OAASC,QAAQ,KAAEC,IAArB,YAA+BC,GAAkB,EACzE,aAAaC,EAAAA,EAAAA,IAAW,CAAEC,IAAM,cAAcJ,OAAQ,CAAEC,KAAAA,KAAUI,MAAK,QAAC,KAAEC,GAAH,SAAcJ,EAAYI,QAI9ET,EAzCNU,IACb,MAAM,QAAEC,EAAF,aAAWC,EAAcC,UAAU,SAAEC,GAAYZ,OAASC,QAAQ,KAAEC,KAAaM,GAEvFK,EAAAA,EAAAA,YAAU,KAET,GADAC,OAAOC,SAAS,EAAG,IAChBL,EACH,OAAOD,EAAQP,KACb,CAACU,EAAUF,EAAcD,EAASP,IAErC,MAAQP,OAASqB,SAAUC,GAAc,IAAOP,GAAgB,GAC1DQ,GAAOC,EAAAA,EAAAA,IAAYT,EAAcE,GAEvC,OACC,iCACC,SAAC,IAAD,IAAYM,KACZ,iBAAKE,GAAG,UAAUxB,UAAU,wCAA5B,WACC,SAAC,IAAD,CAAOD,MAAOsB,KACd,SAAC,IAAD,CAAMI,MAAO,CAACX,GAAed,UAAU,yBAAyB0B,UAAU,EAAMC,SAAUb,aA2B9F,WAAec,EAAAA,EAAAA,KApBS,CAACC,EAAOjB,KAC/B,MAAM,MAAEkB,GAAUD,GACVzB,OAASC,QAAQ,KAAEC,KAAaM,EAGxC,MAAQ,CAAEE,aAFWiB,GAAAA,CAAMD,EAAO,CAAExB,KAAAA,QAMV0B,IAAYC,EAAAA,EAAAA,IAAmB,CAAEpB,QAAF,KAAWN,YAAX,MAA0ByB,IAWpF,CAA4D/B","sources":["pages/Page/components/Intro.js","pages/Page/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst PageIntro = ({ title = 'Lorem ipsum dolor sit' }) => (\r\n\t<section className=\"page-intro bg-primary bg-gradient text-white\">\r\n\t\t<Container>\r\n\t\t\t<h1 className=\"page-intro__headline\">{title}</h1>\r\n\t\t</Container>\r\n\t</section>\r\n);\r\n\r\nexport default PageIntro;\r\n","import React, { useEffect } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { frontloadConnect } from 'react-frontload';\r\nimport { Helmet } from 'react-helmet';\r\nimport _find from 'lodash/find';\r\n\r\n// Deps\r\nimport Intro from './components/Intro';\r\nimport Main from './../../components/General/Main';\r\nimport { requestApi } from './../../redux/actions/api';\r\nimport { getPage, updatePages } from './../../redux/actions/pages';\r\nimport { getMetaTags } from './../../utilities/wordpress/wpPost';\r\n\r\nconst Page = (props) => {\r\n\tconst { getPage, selectedPage, location: { pathname }, match: { params: { slug } } } = props;\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tif(selectedPage) return;\r\n\t\treturn getPage(slug);\r\n\t}, [pathname, selectedPage, getPage, slug]);\r\n\r\n\tconst { title: { rendered: pageTitle } = {} } = selectedPage || {};\r\n\tconst tags = getMetaTags(selectedPage, pathname);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet {...tags} />\r\n\t\t\t<div id=\"content\" className=\"content content--page content--single\">\r\n\t\t\t\t<Intro title={pageTitle} />\r\n\t\t\t\t<Main posts={[selectedPage]} className=\"container py-3 py-lg-5\" isSingle={true} loading={!selectedPage} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n// Binds menu items to navigation container\r\nconst mapStateToProps = (store, props) => {\r\n\tconst { pages } = store;\r\n\tconst { match: { params: { slug } } } = props;\r\n\tconst selectedPage = _find(pages, { slug });\r\n\r\n\treturn ({ selectedPage });\r\n};\r\n\r\n// mapDispatchToProps -> getPage\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getPage, updatePages }, dispatch);\r\n\r\n// Server Side Stuff\r\nconst frontload = async ({ match: { params: { slug } }, updatePages }) => {\r\n\treturn await requestApi({ url: `wp/v2/pages`, params: { slug } }).then(({ data }) => updatePages(data));\r\n};\r\n\r\n// Connect to Frontload SSR\r\nconst PageConnect = frontloadConnect(frontload)(Page);\r\n\r\n// Export container while connected to store with frontload\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageConnect);\r\n"],"names":["title","className","PageConnect","frontloadConnect","async","match","params","slug","updatePages","requestApi","url","then","data","props","getPage","selectedPage","location","pathname","useEffect","window","scrollTo","rendered","pageTitle","tags","getMetaTags","id","posts","isSingle","loading","connect","store","pages","_find","dispatch","bindActionCreators"],"sourceRoot":""}