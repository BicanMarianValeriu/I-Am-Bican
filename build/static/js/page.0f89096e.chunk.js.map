{"version":3,"sources":["pages/Page.js"],"names":["Page","window","scrollTo","prevProps","location","pathname","this","props","slug","match","params","getPage","nextProps","selectedPage","entry","title","rendered","tags","getMetaTags","Fragment","id","className","pageTitle","posts","isSingle","loading","Component","frontload","a","updatePages","requestApi","get","then","req","data","connect","store","pages","pending","ui","_find","dispatch","bindActionCreators","frontloadConnect","onMount","onUpdate"],"mappings":"2SAaMA,E,4LAEJC,OAAOC,SAAS,EAAG,K,yCAGDC,GAClB,GAAIA,EAAUC,SAASC,WAAaC,KAAKC,MAAMH,SAASC,SAAU,CAAC,IAAD,EAChBC,KAAKC,MAA3BC,EADsC,EACzDC,MAASC,OAAUF,KAAUG,EAD4B,EAC5BA,QAErC,OADAV,OAAOC,SAAS,EAAG,GACZS,EAAQ,CAAEH,Y,4CAIGI,GACrB,OAAQN,KAAKC,MAAMM,eAAiBD,EAAUC,e,+BAGrC,IAAD,EACyCP,KAAKC,MAA9CM,EADA,EACAA,aAA0BR,EAD1B,EACcD,SAAYC,SAC5BS,EAAQD,GAAgB,GAFtB,EAGyCC,EAAzCC,MAHA,gBAGkC,GAHlC,GAGSC,SAAUD,OAHnB,MAG2B,GAH3B,EAIFE,EAAOJ,GAAgBK,YAAYJ,EAAOT,GAChD,OACC,kBAAC,IAAMc,SAAP,KACC,kBAAC,IAAWF,GACZ,yBAAKG,GAAG,UAAUC,UAAU,yCAC3B,kBAAC,IAAD,CAAWC,UAAWP,IACtB,yBAAKM,UAAU,aACd,kBAAC,IAAD,CAAME,MAAO,CAACV,GAAeQ,UAAU,eAAeG,UAAU,EAAMC,SAAUZ,W,GA5BnEa,aAiDbC,EAAS,uCAAG,WAAMpB,GAAN,mBAAAqB,EAAA,6DACUpB,EAA0BD,EAA7CE,MAASC,OAAUF,KAAUqB,EAAgBtB,EAAhBsB,YADpB,SAEEC,IAAWC,IAAX,2BAAmCvB,IAAQwB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAK,MAFlE,cAEXA,EAFW,yBAGVL,EAAYK,IAHF,2CAAH,sDAOAC,uBAnBS,SAACC,EAAO7B,GAAW,IAClC8B,EAA2BD,EAA3BC,MAAaC,EAAcF,EAApBG,GAAMD,QACM9B,EAAaD,EAAhCE,MAASC,OAAUF,KAG3B,MAAQ,CAAEK,aAFW2B,IAAMH,EAAO,CAAE7B,SAEZ8B,cAIE,SAAAG,GAAQ,OAAIC,YAAmB,CAAE/B,YAASkB,iBAAeY,KAUrEN,CACdQ,2BAAiBhB,EAAW,CAAEiB,SAAS,EAAMC,UAAU,GAAvDF,CAAgE3C","file":"static/js/page.0f89096e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { frontloadConnect } from \"react-frontload\";\r\nimport Helmet from \"react-helmet\";\r\nimport _find from 'lodash/find';\r\n\r\n// Deps\r\nimport { PageIntro, Main } from \"../components/General\";\r\nimport { requestApi } from \"../redux/actions/api\";\r\nimport { getPage, updatePages } from \"../redux/actions/pages\";\r\nimport { getMetaTags } from \"../utilities/wordpress/wpPost\";\r\n\r\nclass Page extends Component {\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.location.pathname !== this.props.location.pathname) {\r\n\t\t\tconst { match: { params: { slug } }, getPage } = this.props;\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t\treturn getPage({ slug });\r\n\t\t}\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps) {\r\n\t\treturn (this.props.selectedPage !== nextProps.selectedPage);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { selectedPage, location: { pathname } } = this.props;\r\n\t\tconst entry = selectedPage || {};\r\n\t\tconst { title: { rendered: title = '' } = {} } = entry;\r\n\t\tconst tags = selectedPage && getMetaTags(entry, pathname);\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helmet {...tags} />\r\n\t\t\t\t<div id=\"content\" className=\"content content--page content--single\">\r\n\t\t\t\t\t<PageIntro pageTitle={title} />\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Main posts={[selectedPage]} className=\"py-3 py-md-5\" isSingle={true} loading={!selectedPage} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Binds menu items to navigation container\r\nconst mapStateToProps = (store, props) => {\r\n\tconst { pages, ui: { pending } } = store;\r\n\tconst { match: { params: { slug } } } = props;\r\n\tconst selectedPage = _find(pages, { slug });\r\n\r\n\treturn ({ selectedPage, pending });\r\n};\r\n\r\n// mapDispatchToProps -> getPage\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getPage, updatePages }, dispatch);\r\n\r\n// Server Side Stuff\r\nconst frontload = async props => {\r\n\tconst { match: { params: { slug } }, updatePages } = props;\r\n\tconst data = await requestApi.get(`wp/v2/pages?slug=${slug}`).then(req => req.data[0]);\r\n\treturn updatePages(data);\r\n};\r\n\r\n// Export container while connected to store with frontload\r\nexport default connect(mapStateToProps, mapDispatchToProps)(\r\n\tfrontloadConnect(frontload, { onMount: true, onUpdate: false })(Page)\r\n);\r\n"],"sourceRoot":""}