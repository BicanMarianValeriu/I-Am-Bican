{"version":3,"sources":["pages/Page.js"],"names":["Page","this","props","slug","match","params","getPage","window","scrollTo","prevProps","location","pathname","nextProps","selectedPage","title","pageTitle","rendered","tags","getMetaTags","id","className","posts","isSingle","loading","Component","frontload","a","updatePages","requestApi","get","then","req","data","PageConnect","frontloadConnect","onMount","onUpdate","connect","store","pages","_find","dispatch","bindActionCreators"],"mappings":"yRAaMA,E,kLACgB,IAAD,EAC8BC,KAAKC,MAA3BC,EADR,EACXC,MAASC,OAAUF,KAAUG,EADlB,EACkBA,QAErC,OADAC,OAAOC,SAAS,EAAG,GACZF,EAAQ,CAAEH,W,yCAGCM,GAClB,GAAIA,EAAUC,SAASC,WAAaV,KAAKC,MAAMQ,SAASC,SAAU,CAAC,IAAD,EAChBV,KAAKC,MAA3BC,EADsC,EACzDC,MAASC,OAAUF,KAAUG,EAD4B,EAC5BA,QAErC,OADAC,OAAOC,SAAS,EAAG,GACZF,EAAQ,CAAEH,Y,4CAIGS,GACrB,OAAQA,EAAUC,eAAiBZ,KAAKC,MAAMW,e,+BAGrC,IAAD,EACyCZ,KAAKC,MAA9CW,EADA,EACAA,aAA0BF,EAD1B,EACcD,SAAYC,SAD1B,GAEwCE,GAAgB,IAAxDC,MAAmBC,GAFnB,aAEiC,GAFjC,GAESC,SACXC,EAAOJ,GAAgBK,YAAYL,EAAcF,GACvD,OACC,kBAAC,WAAD,KACC,kBAAC,IAAWM,GACZ,yBAAKE,GAAG,UAAUC,UAAU,yCAC3B,kBAAC,IAAD,CAAWL,UAAWA,IACtB,yBAAKK,UAAU,aACd,kBAAC,IAAD,CAAMC,MAAO,CAACR,GAAeO,UAAU,eAAeE,UAAU,EAAMC,SAAUV,W,GA7BnEW,aAkDbC,EAAS,uCAAG,WAAMvB,GAAN,mBAAAwB,EAAA,6DACUvB,EAA0BD,EAA7CE,MAASC,OAAUF,KAAUwB,EAAgBzB,EAAhByB,YADpB,SAEEC,IAAWC,IAAX,2BAAmC1B,IAAQ2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAK,MAFlE,cAEXA,EAFW,yBAGVL,EAAYK,IAHF,2CAAH,sDAOTC,EAAcC,2BAAiBT,EAAW,CAAEU,SAAS,EAAMC,UAAU,GAAvDF,CAAgElC,GAGrEqC,uBAtBS,SAACC,EAAOpC,GAAW,IAClCqC,EAAUD,EAAVC,MACmBpC,EAAaD,EAAhCE,MAASC,OAAUF,KAG3B,MAAQ,CAAEU,aAFW2B,IAAMD,EAAO,CAAEpC,aAMV,SAAAsC,GAAQ,OAAIC,YAAmB,CAAEpC,YAASqB,iBAAec,KAarEJ,CAA6CJ","file":"static/js/page.fb3ac4b6.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { frontloadConnect } from 'react-frontload';\r\nimport { Helmet } from 'react-helmet';\r\nimport _find from 'lodash/find';\r\n\r\n// Deps\r\nimport { PageIntro, Main } from \"../components/General\";\r\nimport { getPage, updatePages } from \"../redux/actions/pages\";\r\nimport { requestApi } from \"../redux/actions/api\";\r\nimport { getMetaTags } from \"../utilities/wordpress/wpPost\";\r\n\r\nclass Page extends Component {\r\n\tcomponentDidMount() {\r\n\t\tconst { match: { params: { slug } }, getPage } = this.props;\r\n\t\twindow.scrollTo(0, 0);\r\n\t\treturn getPage({ slug });\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.location.pathname !== this.props.location.pathname) {\r\n\t\t\tconst { match: { params: { slug } }, getPage } = this.props;\r\n\t\t\twindow.scrollTo(0, 0);\r\n\t\t\treturn getPage({ slug });\r\n\t\t}\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps) {\r\n\t\treturn (nextProps.selectedPage !== this.props.selectedPage);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { selectedPage, location: { pathname } } = this.props;\r\n\t\tconst { title: { rendered: pageTitle } = {} } = selectedPage || {};\r\n\t\tconst tags = selectedPage && getMetaTags(selectedPage, pathname);\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Helmet {...tags} />\r\n\t\t\t\t<div id=\"content\" className=\"content content--page content--single\">\r\n\t\t\t\t\t<PageIntro pageTitle={pageTitle} />\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Main posts={[selectedPage]} className=\"py-3 py-md-5\" isSingle={true} loading={!selectedPage} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Binds menu items to navigation container\r\nconst mapStateToProps = (store, props) => {\r\n\tconst { pages } = store;\r\n\tconst { match: { params: { slug } } } = props;\r\n\tconst selectedPage = _find(pages, { slug });\r\n\r\n\treturn ({ selectedPage });\r\n};\r\n\r\n// mapDispatchToProps -> getPage\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getPage, updatePages }, dispatch);\r\n\r\n// Server Side Stuff\r\nconst frontload = async props => {\r\n\tconst { match: { params: { slug } }, updatePages } = props;\r\n\tconst data = await requestApi.get(`wp/v2/pages?slug=${slug}`).then(req => req.data[0]);\r\n\treturn updatePages(data);\r\n}\r\n\r\n// Connect to Frontload SSR\r\nconst PageConnect = frontloadConnect(frontload, { onMount: true, onUpdate: false })(Page);\r\n\r\n// Export container while connected to store with frontload\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageConnect);\r\n"],"sourceRoot":""}