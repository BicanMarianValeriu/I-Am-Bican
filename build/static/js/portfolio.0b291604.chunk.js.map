{"version":3,"sources":["pages/portfolio.js"],"names":["frontload","_ref","Object","C_xampp_htdocs_iambican_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__","C_xampp_htdocs_iambican_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default","a","mark","_callee","props","wrap","_context","prev","next","fetchDispatcher","slug","match","params","success","FETCH_POSTS_FULFILLED","abrupt","sent","stop","this","_x","apply","arguments","Portfolio","nextProps","location","pathname","query","window","scrollTo","entry","posts","meta","title","yoast_meta","rendered","description","canonical","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","rel","href","name","content","id","className","_components_sections_page_intro__WEBPACK_IMPORTED_MODULE_9__","pageTitle","_components_main_index__WEBPACK_IMPORTED_MODULE_10__","isSingle","Component","connect","store","api","dispatch","bindActionCreators","frontloadConnect","onMount","onUpdate"],"mappings":"iPAWMA,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACXJ,EAAMK,gBACX,kBACA,CACCC,KAAMN,EAAMO,MAAMC,OAAOF,MAE1B,CAAEG,QAASC,MANK,cAAAR,EAAAS,OAAA,SAAAT,EAAAU,MAAA,wBAAAV,EAAAW,SAAAd,EAAAe,SAAH,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,GASTC,oMACqBC,GACzB,GAAIL,KAAKd,MAAMoB,SAASC,WAAaF,EAAUC,SAASC,SAAU,CACjE,IAAIC,EAAQ,CAAEhB,KAAMa,EAAUZ,MAAMC,OAAOF,MAC3CQ,KAAKd,MAAMK,gBAAgB,kBAAmBiB,EAAO,CACpDb,QAASC,oDAMXa,OAAOC,SAAS,EAAG,oCAInB,IAAMC,EAAQX,KAAKd,MAAM0B,MAAM,GAElBL,EACTP,KAAKd,MADRoB,SAAYC,SAEPM,EAAO,CACZC,MACEH,GAASA,EAAMI,WAAWD,OAAWH,GAASA,EAAMG,MAAME,SAC5DC,YAAaN,GAASA,EAAMI,WAAWE,YACvCC,UAAW,0BAA4BX,GAGxC,OACCY,EAAApC,EAAAqC,cAACD,EAAApC,EAAMsC,SAAP,KACCF,EAAApC,EAAAqC,cAACE,EAAAvC,EAAD,KACCoC,EAAApC,EAAAqC,cAAA,aAAQP,EAAKC,OACbK,EAAApC,EAAAqC,cAAA,QAAMG,IAAI,YAAYC,KAAMX,EAAKK,YAChCL,EAAKI,aACLE,EAAApC,EAAAqC,cAAA,QAAMK,KAAK,cAAcC,QAASb,EAAKI,eAGzCE,EAAApC,EAAAqC,cAAA,OAAKO,GAAG,UAAUC,UAAU,WAC3BT,EAAApC,EAAAqC,cAACS,EAAA,EAAD,CAAWC,UAAWnB,GAASA,EAAMG,MAAME,WAC3CG,EAAApC,EAAAqC,cAACW,EAAA,EAAD,CAAMnB,MAAOZ,KAAKd,MAAM0B,MAAOoB,UAAU,aArCtBC,aAyDTC,sBAZS,SAAAC,GAIvB,MAAO,CAAEvB,MADLuB,EADHC,IAAOxB,QAMkB,SAAAyB,GAAQ,OAClCC,YAAmB,CAAE/C,qBAAmB8C,IAG1BH,CAIdK,2BAAiB7D,EAAW,CAC3B8D,SAAS,EACTC,UAAU,GAFXF,CAGGnC","file":"static/js/portfolio.0b291604.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n// Deps\r\nimport PageIntro from \"../components/sections/page-intro\";\r\nimport Main from \"./../components/main/index\";\r\nimport { fetchDispatcher, FETCH_POSTS_FULFILLED } from \"../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { frontloadConnect } from \"react-frontload\";\r\n\r\n// Server Side Stuff\r\nconst frontload = async props =>\r\n\tawait props.fetchDispatcher(\r\n\t\t\"wp/v2/portfolio\",\r\n\t\t{\r\n\t\t\tslug: props.match.params.slug\r\n\t\t},\r\n\t\t{ success: FETCH_POSTS_FULFILLED }\r\n\t);\r\n\r\nclass Portfolio extends Component {\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (this.props.location.pathname !== nextProps.location.pathname) {\r\n\t\t\tvar query = { slug: nextProps.match.params.slug };\r\n\t\t\tthis.props.fetchDispatcher(\"wp/v2/portfolio\", query, {\r\n\t\t\t\tsuccess: FETCH_POSTS_FULFILLED\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst entry = this.props.posts[0];\r\n\t\tconst {\r\n\t\t\tlocation: { pathname }\r\n\t\t} = this.props;\r\n\t\tconst meta = {\r\n\t\t\ttitle:\r\n\t\t\t\t(entry && entry.yoast_meta.title) || (entry && entry.title.rendered),\r\n\t\t\tdescription: entry && entry.yoast_meta.description,\r\n\t\t\tcanonical: \"http://www.iambican.com\" + pathname\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>{meta.title}</title>\r\n\t\t\t\t\t<link rel=\"canonical\" href={meta.canonical} />\r\n\t\t\t\t\t{meta.description && (\r\n\t\t\t\t\t\t<meta name=\"description\" content={meta.description} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<div id=\"content\" className=\"content\">\r\n\t\t\t\t\t<PageIntro pageTitle={entry && entry.title.rendered} />\r\n\t\t\t\t\t<Main posts={this.props.posts} isSingle={true} />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Binds Query / Query Result\r\nconst mapStateToProps = store => {\r\n\tconst {\r\n\t\tapi: { posts }\r\n\t} = store;\r\n\treturn { posts };\r\n};\r\n\r\n// Connect fetchDispatch function to props.fetchDispatch\r\nconst mapDispatchToProps = dispatch =>\r\n\tbindActionCreators({ fetchDispatcher }, dispatch);\r\n\r\n// Export container while connected to store and SSR\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(\r\n\tfrontloadConnect(frontload, {\r\n\t\tonMount: true,\r\n\t\tonUpdate: false\r\n\t})(Portfolio)\r\n);\r\n"],"sourceRoot":""}