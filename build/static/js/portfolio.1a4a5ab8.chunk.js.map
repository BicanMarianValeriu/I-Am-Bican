{"version":3,"sources":["containers/portfolio.js"],"names":["frontload","_ref","Object","C_xampp_htdocs_iambican_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__","C_xampp_htdocs_iambican_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default","a","mark","_callee","props","wrap","_context","prev","next","fetchDispatcher","slug","match","params","success","FETCH_POSTS_FULFILLED","abrupt","sent","stop","this","_x","apply","arguments","Portfolio","nextProps","location","pathname","query","window","scrollTo","entry","posts","meta","title","yoast_meta","rendered","description","canonical","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","rel","href","name","content","id","className","_components_sections_page_intro__WEBPACK_IMPORTED_MODULE_9__","pageTitle","_components_main__WEBPACK_IMPORTED_MODULE_10__","isSingle","Component","connect","store","api","dispatch","bindActionCreators","frontloadConnect","onMount","onUpdate"],"mappings":"iPAWMA,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVJ,EAAMK,gBACV,kBACA,CACEC,KAAMN,EAAMO,MAAMC,OAAOF,MAE3B,CAAEG,QAASC,MANG,cAAAR,EAAAS,OAAA,SAAAT,EAAAU,MAAA,wBAAAV,EAAAW,SAAAd,EAAAe,SAAH,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,GASTC,oMACsBC,GACxB,GAAIL,KAAKd,MAAMoB,SAASC,WAAaF,EAAUC,SAASC,SAAU,CAChE,IAAIC,EAAQ,CAAEhB,KAAMa,EAAUZ,MAAMC,OAAOF,MAC3CQ,KAAKd,MAAMK,gBAAgB,kBAAmBiB,EAAO,CACnDb,QAASC,oDAMba,OAAOC,SAAS,EAAG,oCAInB,IAAMC,EAAQX,KAAKd,MAAM0B,MAAM,GAEjBL,EACVP,KAAKd,MADPoB,SAAYC,SAERM,EAAO,CACXC,MACGH,GAASA,EAAMI,WAAWD,OAAWH,GAASA,EAAMG,MAAME,SAC7DC,YAAaN,GAASA,EAAMI,WAAWE,YACvCC,UAAW,0BAA4BX,GAGzC,OACEY,EAAApC,EAAAqC,cAACD,EAAApC,EAAMsC,SAAP,KACEF,EAAApC,EAAAqC,cAACE,EAAAvC,EAAD,KACEoC,EAAApC,EAAAqC,cAAA,aAAQP,EAAKC,OACbK,EAAApC,EAAAqC,cAAA,QAAMG,IAAI,YAAYC,KAAMX,EAAKK,YAChCL,EAAKI,aACJE,EAAApC,EAAAqC,cAAA,QAAMK,KAAK,cAAcC,QAASb,EAAKI,eAG3CE,EAAApC,EAAAqC,cAAA,OAAKO,GAAG,UAAUC,UAAU,WAC1BT,EAAApC,EAAAqC,cAACS,EAAA,EAAD,CAAWC,UAAWnB,GAASA,EAAMG,MAAME,WAC3CG,EAAApC,EAAAqC,cAACW,EAAA,EAAD,CAAMnB,MAAOZ,KAAKd,MAAM0B,MAAOoB,UAAU,aArC3BC,aAyDTC,4BAZS,SAAAC,GAItB,MAAO,CAAEvB,MADLuB,EADFC,IAAOxB,QAMgB,SAAAyB,GAAQ,OACjCC,YAAmB,CAAE/C,qBAAmB8C,IAG3BH,CAIbK,2BAAiB7D,EAAW,CAC1B8D,SAAS,EACTC,UAAU,GAFZF,CAGGnC","file":"static/js/portfolio.1a4a5ab8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n// Deps\r\nimport PageIntro from \"../components/sections/page-intro\";\r\nimport Main from \"./../components/main\";\r\nimport { fetchDispatcher, FETCH_POSTS_FULFILLED } from \"../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { frontloadConnect } from \"react-frontload\";\r\n\r\n// Server Side Stuff\r\nconst frontload = async props =>\r\n  await props.fetchDispatcher(\r\n    \"wp/v2/portfolio\",\r\n    {\r\n      slug: props.match.params.slug\r\n    },\r\n    { success: FETCH_POSTS_FULFILLED }\r\n  );\r\n\r\nclass Portfolio extends Component {\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.location.pathname !== nextProps.location.pathname) {\r\n      var query = { slug: nextProps.match.params.slug };\r\n      this.props.fetchDispatcher(\"wp/v2/portfolio\", query, {\r\n        success: FETCH_POSTS_FULFILLED\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    const entry = this.props.posts[0];\r\n    const {\r\n      location: { pathname }\r\n    } = this.props;\r\n    const meta = {\r\n      title:\r\n        (entry && entry.yoast_meta.title) || (entry && entry.title.rendered),\r\n      description: entry && entry.yoast_meta.description,\r\n      canonical: \"http://www.iambican.com\" + pathname\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet>\r\n          <title>{meta.title}</title>\r\n          <link rel=\"canonical\" href={meta.canonical} />\r\n          {meta.description && (\r\n            <meta name=\"description\" content={meta.description} />\r\n          )}\r\n        </Helmet>\r\n        <div id=\"content\" className=\"content\">\r\n          <PageIntro pageTitle={entry && entry.title.rendered} />\r\n          <Main posts={this.props.posts} isSingle={true} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// Binds Query / Query Result\r\nconst mapStateToProps = store => {\r\n  const {\r\n    api: { posts }\r\n  } = store;\r\n  return { posts };\r\n};\r\n\r\n// Connect fetchDispatch function to props.fetchDispatch\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ fetchDispatcher }, dispatch);\r\n\r\n// Export container while connected to store and SSR\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(\r\n  frontloadConnect(frontload, {\r\n    onMount: true,\r\n    onUpdate: false\r\n  })(Portfolio)\r\n);\r\n"],"sourceRoot":""}